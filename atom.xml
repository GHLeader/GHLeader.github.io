<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[iOS进阶]]></title>
  <subtitle><![CDATA[键动世界,寻觅静默的烟火]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-08-02T07:42:28.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[GH Leader]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[iOS进阶之路]]></title>
    <link href="http://yoursite.com/2016/07/29/iOS%E8%BF%9B%E9%98%B6%E4%B9%8B%E8%B7%AF/"/>
    <id>http://yoursite.com/2016/07/29/iOS进阶之路/</id>
    <published>2016-07-29T07:09:27.000Z</published>
    <updated>2016-08-02T07:42:28.000Z</updated>
    <content type="html"><![CDATA[<h1 id="网络数据请求"><a href="#网络数据请求" class="headerlink" title="网络数据请求"></a>网络数据请求</h1><blockquote>
<p><a href="http://www.baidu.com?city=beijing&amp;weather=" target="_blank" rel="external">http://www.baidu.com?city=beijing&amp;weather=</a><br>    ?前面部分被称为请求头  ？后面的部分被称为请求体<br>    请求体由参数和参数值组成 多个参数之间用&amp;连接</p>
<ul>
<li>按照接口划分：<br>如果接口是完整（包括请求头和请求体两部分）<br>  这种数据请求 我们就使用GET方式请求数据<br>  GET方式请求数据非常简单 但是不安全 请求数据的信息都在接口的请求体位置裸露出来 所以不安全<br>  如果接口不完整（只有请求头 没有请求体）<br>  这种数据请求的方式 我们就使用POST方式请求数据<br>  POST方式请求数据 相对来说复杂一些 请求体需要写代码手动拼接<br>  POST请求数据的方式经常用于登录、注册、文件的上传</li>
<li>按照请求数据的样式划分:<blockquote>
<ul>
<li>同步请求:多个请求对象向服务器请求数据 服务器会将多个对象放在队列中 一个对象开始请求数据 其他对象在队列中等待 如果第一个对象请求数据结束以后 第二个对象才能开始请求数据 即使对象请求数据结束也要在队列中等待 等待所有对象全部请求数据完成 服务器才将所有对象请求的数据反馈给UI 所有用户体验非常不好 经常出现白屏获取卡顿 (也就是影响了UI主线程的工作)</li>
<li>异步请求:多个对象请求数据 也是将多个对象放在队列中 多个对象同时请求数据 谁先请求数据完成 就将数据反馈给UI 无需等待其他对象完成数据请求<br>iOS开发中用到的数据请求都是异步请求 异步请求能够提高CPU的利用率</li>
</ul>
</blockquote>
</li>
</ul>
<p>真正开发中和数据有关的就是下面的4步</p>
<ul>
<li>数据请求</li>
<li>将请求下来的数据进行解析</li>
<li>将解析好的数据显示在UI上</li>
<li>将UI上的数据进行持久性存储</li>
</ul>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="网络数据请求"><a href="#网络数据请求" class="headerlink" title="网络数据请求"></a>网络数据请求</h1><blockquote>
<p><a href="http://www.baidu.com?city=beijin]]>
    </summary>
    
  </entry>
  
</feed>
